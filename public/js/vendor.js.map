{"version":3,"sources":["laravel-bootstrap-modal-form.js"],"names":[],"mappingsfile":"vendor.js","sourcesContent":["/*!\n * Laravel-Bootstrap-Modal-Form (https://github.com/JerseyMilker/Laravel-Bootstrap-Modal-Form)\n * Copyright 2015 Jesse Leite - MIT License\n *\n * Bromance:\n * Adam Wathan has nice boots. Thank you for BootForms magic.\n * Matt Higgins has nice beard. Thank you for JS wizardry.\n */\n\n$('document').ready(function() {\n\n    // Prepare reset.\n    function resetModalFormErrors() {\n        $('.form-group').removeClass('has-error');\n        $('.form-group').find('.help-block').remove();\n    }\n\n    // Intercept submit.\n    $('form.bootstrap-modal-form').on('submit', function(submission) {\n        submission.preventDefault();\n\n        // Set vars.\n        var form   = $(this),\n            url    = form.attr('action'),\n            submit = form.find('[type=submit]');\n\n        // Check for file inputs.\n        if (form.find('[type=file]').length) {\n\n            // If found, prepare submission via FormData object.\n            var input       = form.serializeArray(),\n                data        = new FormData(),\n                contentType = false;\n\n            // Append input to FormData object.\n            $.each(input, function(index, input) {\n                data.append(input.name, input.value);\n            });\n\n            // Append files to FormData object.\n            $.each(form.find('[type=file]'), function(index, input) {\n                if (input.files.length == 1) {\n                    data.append(input.name, input.files[0]);\n                } else if (input.files.length > 1) {\n                    data.append(input.name, input.files);\n                }\n            });\n        }\n\n        // If no file input found, do not use FormData object (better browser compatibility).\n        else {\n            var data        = form.serialize(),\n                contentType = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n\n        // Please wait.\n        if (submit.is('button')) {\n            var submitOriginal = submit.html();\n            submit.html('Please wait...');\n        } else if (submit.is('input')) {\n            var submitOriginal = submit.val();\n            submit.val('Please wait...');\n        }\n\n        // Request.\n        $.ajax({\n            type: \"POST\",\n            url: url,\n            data: data,\n            dataType: 'json',\n            cache: false,\n            contentType: contentType,\n            processData: false\n\n        // Response.\n        }).always(function(response, status) {\n\n            // Reset errors.\n            resetModalFormErrors();\n\n            // Check for errors.\n            if (response.status == 422) {\n                var errors = $.parseJSON(response.responseText);\n\n                // Iterate through errors object.\n                $.each(errors, function(field, message) {\n                    console.error(field+': '+message);\n                    //handle arrays\n                    if(field.indexOf('.') != -1) {\n                        field = field.replace('.', '[');\n                        //handle multi dimensional array\n                        for (i = 1; i <= (field.match(/./g) || []).length; i++) {\n                            field = field.replace('.', '][');\n                        }\n                        field = field + \"]\";\n                    }\n                    var formGroup = $('[name='+field+']', form).closest('.form-group');\n                    formGroup.addClass('has-error').append('<p class=\"help-block\">'+message+'</p>');\n                });\n\n                // Reset submit.\n                if (submit.is('button')) {\n                    submit.html(submitOriginal);\n                } else if (submit.is('input')) {\n                    submit.val(submitOriginal);\n                }\n\n            // If successful, reload.\n            } else {\n                location.reload();\n            }\n        });\n    });\n\n    // Reset errors when opening modal.\n    $('.bootstrap-modal-form-open').click(function() {\n        resetModalFormErrors();\n    });\n\n});\n"]}